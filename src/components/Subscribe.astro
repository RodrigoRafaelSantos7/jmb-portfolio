---
import siteConfig from '../data/site-config';
import Button from './Button.astro';

const subscribe = siteConfig.subscribe;

const { class: className } = Astro.props;
---

<section class:list={['px-8 py-12 flex flex-col items-center border border-dashed border-main text-center sm:px-12 sm:py-16', className]}>
    {
        subscribe?.title && (
            <h2 class:list={['w-full max-w-xl text-2xl leading-tight font-serif font-medium sm:text-4xl', subscribe.text ? 'mb-4' : 'mb-8']}>
                {subscribe.title}
            </h2>
        )
    }
    {subscribe?.text && <p class="w-full max-w-xl mb-8 text-sm leading-normal">{subscribe.text}</p>}
    <form id="subscribe-form" name="subscribe-form" class="w-full max-w-xl flex flex-col gap-3.5 sm:flex-col">
        <label for="email" class="sr-only"> Email Address </label>
        <input
            type="email"
            name="email"
            id="email"
            class="w-full h-9 px-5 py-2 text-sm text-main bg-transparent border border-main rounded-full placeholder:text-main/60 focus:outline-hidden"
            required=""
            value=""
            placeholder="Your email"
        />
        <label for="email" class="sr-only"> Email Address </label>
        <input
            type="text"
            name="name"
            id="name"
            class="w-full h-9 px-5 py-2 text-sm text-main bg-transparent border border-main rounded-full placeholder:text-main/60 focus:outline-hidden"
            required=""
            value=""
            placeholder="Your Name"
        />
        <label for="message" class="sr-only"> Message </label>
        <textarea
            name="message"
            id="message"
            class="w-full h-24 px-5 py-2 text-sm text-main bg-transparent border border-main rounded-xl placeholder:text-main/60 focus:outline-hidden"
            required=""
            placeholder="Your message"></textarea>
        <Button type="submit" name="subscribe" class="w-full h-9 sm:w-auto"> Send Message </Button>
    </form>
</section>

<script>
    // Handle form submission
    document.addEventListener('DOMContentLoaded', () => {
        const form = document.getElementById('subscribe-form') as HTMLFormElement;
        if (form) {
            form.addEventListener('submit', async (e) => {
                e.preventDefault();

                const formData = new FormData(form);
                const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;

                if (submitButton) {
                    submitButton.disabled = true;
                    submitButton.textContent = 'Sending...';
                }

                try {
                    const response = await fetch('/api/send', {
                        method: 'POST',
                        body: formData
                    });

                    const result = await response.json();

                    if (result.success) {
                        alert('Message sent successfully!');
                        form.reset();
                    } else {
                        alert('Failed to send message. Please try again.');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Failed to send message. Please try again.');
                } finally {
                    if (submitButton) {
                        submitButton.disabled = false;
                        submitButton.textContent = 'Send Message';
                    }
                }
            });
        }
    });
</script>
